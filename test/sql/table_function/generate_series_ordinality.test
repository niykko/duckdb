# name: test/sql/table_function/generate_series_ordinality.test
# description: Test generate_series/range function with "with ordinality"
# group: [table_function]

# range with a single parameter
query II
SELECT * from range(3) with ordinality;
----
0	1
1	2
2	3

query II
SELECT * from generate_series(3) with ordinality;
----
0	1
1	2
2	3
3	4

query II
SELECT range(CASE WHEN i%2=0 THEN NULL ELSE i END),e FROM range(6) with ordinality tbl(i,e);
----
NULL	1
[0]	2
NULL	3
[0, 1, 2]	4
NULL	5
[0, 1, 2, 3, 4]	6

query II
SELECT * from range(0) with ordinality;
----

query II
SELECT * from range(NULL) with ordinality;
----


# range with two parameters
query II
SELECT * from range(1, 4) with ordinality;
----
1	1
2	2
3	3

query II
SELECT * from generate_series(1, 3) with ordinality;
----
1	1
2	2
3	3

query II
SELECT * from range(1, 1) with ordinality;
----


query II
SELECT * from range(-10, -5) with ordinality;
----
-10	1
-9	2
-8	3
-7	4
-6	5

query II
SELECT range(i, 5),e FROM range(5) with ordinality tbl(i,e);
----
[0, 1, 2, 3, 4]	1
[1, 2, 3, 4]	2
[2, 3, 4]	3
[3, 4]	4
[4]	5

# range with 3 parameters
query II
SELECT * from range(1, 6, 2) with ordinality;
----
1	1
3	2
5	3

query II
SELECT * from generate_series(1, 6, 2) with ordinality;
----
1	1
3	2
5	3


